caption: Prototyping
created: 20201208132349001
modified: 20201209132506284
tags: 
title: $:/plugins/rimir/tabletree/prototyping
tocp.tabletree-plugin-parent.ref: #:/p/tabletree/#:/prototyping
type: text/vnd.tiddlywiki

\define statePrefix() $:/state/rimir/table-tree/$(qualify)$
\define stateTiddler() $(statePrefix)$/$(currentTiddler)$
\define currentState() {{{[[$(stateTiddler)$]get[text]else[closed]]}}}
\define oppositeState() {{{[<myCurrentState>match[open]then[closed]else[open]]}}}

\define switchOpenStateActions(nodeDepth) <$action-setfield $tiddler=<<stateTiddler>> text=<<myOppositeState>>/><$action-setfield $tiddler=<<stateTiddler>> depth="$nodeDepth$"/><$macrocall $name="updateChildrensHiddenStateAndDepthActions" depth={{{[[$nodeDepth$]add[1]]}}}/>

\define updateChildrensHiddenStateAndDepthActions(depth)
<$wikify name="myChildren" text=<<children>>>
<$list filter="[enlist<myChildren>]">
<$action-setfield $tiddler=<<stateTiddler>> depth="$depth$"/>
<$list filter="[<myOppositeState>match[closed]]" variable="ignore">
<$action-setfield $tiddler=<<stateTiddler>> visibility="hidden"/>
</$list>
<$list filter="[<myOppositeState>match[open]]" variable="ignore">
<$action-setfield $tiddler=<<stateTiddler>> visibility="visible"/>
</$list>
<$list filter="[<stateTiddler>get[text]match[open]]" variable="ignore">
<$macrocall $name="updateChildrensHiddenStateAndDepthActions" depth={{{[[$depth$]add[1]]}}}/>
</$list>
</$list>
</$wikify>
\end

\define maxVisibleDepth() {{{[prefix[$(statePrefix)$]field:text[open]!field:visibility[hidden]][prefix[$(statePrefix)$]field:text[closed]field:visibility[visible]][prefix[$(statePrefix)$]field:text[]field:visibility[visible]]+[get[depth]][[1]]+[maxall[]]}}}


\define openStateIcon() {{{[<myCurrentState>match[open]then[&#9661;]else[&#9655;]]}}}
\define rowState() statePH
\define rowActions() <td>act1PH</td><td>act2PH</td>
\define caption() <<currentTiddler>>
\define children() {{{[<currentTiddler>match[threat1]then[t1ch1 t1ch2 t1ch3]]~[<currentTiddler>match[threat2]then[t2ch1]]~[<currentTiddler>match[t2ch1]then[t2ch1ch1]]~[<currentTiddler>match[t2ch1ch1]then[t2ch1ch1ch1]]}}}
\define clickActions() <clickActionsTBD>

\define row(depth)
<$wikify name="myCurrentState" text=<<currentState>>>
<$wikify name="myOppositeState" text=<<oppositeState>>>
<$wikify name="myOpenStateIcon" text=<<openStateIcon>>>
<$wikify name="myChildren" text=<<children>>>
<tr>
	<td colspan="$depth$"></td><td><$list filter="[enlist<myChildren>first[]]" variable="ignore"><$button class="tc-btn-invisible tc-tiddlylink"><<switchOpenStateActions nodeDepth:"$depth$">><<myOpenStateIcon>></$button></$list></td><td><<rowState>></td><$wikify name="maxDepth" text="<<maxVisibleDepth>>"><$set name="myColSpan" filter="[<maxDepth>add[1]subtract[$depth$]]"><td colspan=<<myColSpan>>><$button class="tc-btn-invisible tc-tiddlylink"><<clickActions>><<switchOpenStateActions nodeDepth:"$depth$">><<caption>></$button></td></$set></$wikify><<rowActions>>
</tr>
<$list filter="[<myCurrentState>match[open]]" variable="ignore">
<$list filter="[enlist<myChildren>]">
<$macrocall $name="row" depth={{{[[$depth$]add[1]]}}}/>
</$list>
</$list>
</$wikify>
</$wikify>
</$wikify>
</$wikify>
\end

<table>
<$list filter="[[threat1]][[threat2]][[threat3]]">
<<row 1>>
</$list>
</table>

!! State-Info:

Current Visible Max-Depth: <<maxVisibleDepth>>

<ul>
<$list filter="[prefix<statePrefix>]" variable="node-state">
<li>
<<node-state>> ({{{[<node-state>get[text]else[closed]]}}} | depth: {{{[<node-state>get[depth]]}}} | visibility: {{{[<node-state>get[visibility]]}}})
</li>
</$list>
</ul>